(function(){"use strict";var t={},e=function(t){return!!t&&"function"==typeof t&&Object.prototype.toString.call(t)==="[object Function]"},i=function(t){return!!t&&Object.prototype.toString.call(t)==="[object Array]"},r=function(t){return!!t&&Object.prototype.toString.call(t)==="[object Arguments]"},n=function(e){if(r(e)&&e[0]&&e[1])return new t.KeyValuePair(e[0],e[1]);if(r(e)||i(e)){if(e.length==1&&e[0]instanceof t.KeyValuePair)return e[0];if(e[0]&&e[0].key&&e[0].value)return new t.KeyValuePair(e[0].key,e[0].value)}if(e&&e.key&&e.value)return new t.KeyValuePair(e.key,e.value);throw Error("Wrong arguments passed to getKeyValuePair. Pass either one KeyValuePair XOR (one key AND one value) XOR {key, value}. Data passed: "+JSON.stringify(e))},a=function(t){var e=[];return t.length>1?e=Array.prototype.slice.call(t,0):t.length==1&&(e=i(t[0])?t[0].slice(0):[t[0]]),e},o=function(t,e,i){var r,n=function(){return t[e]()};do r=n(),i.call(t,r);while(r)};t.KeyValuePair=function(t,e){var i={};if(t&&e)i.key=t,i.value=e;else{if(!t||e)throw Error("ds.KeyValuePair :: ctor -> Invalid arguments.");i=t}this.key=i.key,this.value=i.value},t.KeyValuePair.prototype.equal=function(e){return e instanceof t.KeyValuePair?this.key===e.key&&this.value===e.value:!1},t.Dictionary=function(){this.data=[];for(var t=0,e=arguments.length;e>t;t++){var i=arguments[t];this.add(n(i))}},t.Dictionary.prototype.find=function(t,i){var r=function(){for(var e=0,i=this.data.length;i>e;e++)if(this.data[e].key===t)return[this.data[e],e]}.call(this);if(r){if(!e(i))return r[0];i.call(this,r[0],r[1])}},t.Dictionary.prototype.get=function(t){var e=this.find(t);return e?e.value:void 0},t.Dictionary.prototype.set=function(){var t=n(arguments),e=this.find(t.key);return e?(e.value=t.value,!0):!1},t.Dictionary.prototype.put=function(){var t=n(arguments);this.get(t.key)?this.set(t.key,t.value):this.add(t)},t.Dictionary.prototype.add=function(e){if(!(e instanceof t.KeyValuePair))throw TypeError("Parameter is not of type ds.KeyValuePair.");if(this.get(e.key))throw Error("The key: `"+e.key+"` already exists in this Dictionary");this.data.push(e)},t.Dictionary.prototype.remove=function(t,i){this.find(t,function(t,r){this.data.splice(r,1),e(i)&&i.call(this,t)})},t.Dictionary.prototype.count=function(){return this.data.length},t.Dictionary.prototype.keys=function(){return this.data.map(function(t){return t.key})},t.Dictionary.prototype.values=function(){return this.data.map(function(t){return t.value})},t.Dictionary.prototype.toString=function(){return JSON.stringify(this.data)},t.Dictionary.prototype.each=function(t){for(var e=0,i=this.data.length;i>e;e++)t.call(this,this.data[e])},t.Tuple=function(t){if(!t)throw Error("Invalid arguments");if("number"!=typeof t||1>t)throw Error("Limit must be a number above 0.");this.limit=t,this.data=[],Array.prototype.shift.call(arguments);var e=a(arguments);if(e.length>t)throw Error(["Too many objects! Number supplied: [",e.length,"], limit: [",t,"]."].join(""));this.data=e},t.Tuple.prototype.add=function(t){if(!(this.data.length<this.limit))throw Error("This Tuple has reached it's limit ["+this.limit+"].");this.data.push(t)};var u=function(t,e){return Error("Index is out of bounds: "+t+" > "+e+".")};t.Tuple.prototype.get=function(t){if(t<this.limit)return this.data[t];throw u(t,this.limit)},t.Tuple.prototype.put=function(t,e){if(!(t<this.limit))throw u(t,this.limit);this.data[t]=e},t.Stack=function(){this.data=a(arguments)},t.Stack.prototype.push=function(t){this.data.push(t)},t.Stack.prototype.pop=function(){return this.data.pop()},t.Stack.prototype.peek=function(){return this.data[this.data.length-1]},t.Stack.prototype.deplete=function(t){o(this,"pop",t)},t.Queue=function(){this.data=a(arguments)},t.Queue.prototype.enq=function(t){this.data.push(t)},t.Queue.prototype.deq=function(){return this.data.shift()},t.Queue.prototype.peek=function(){return this.data[0]},t.Queue.prototype.deplete=function(t){o(this,"deq",t)},"undefined"!=typeof module&&module.exports&&(module.exports=t),"undefined"==typeof ender&&(this.ds=t),"function"==typeof define&&define.amd&&define("ds",[],function(){return t})}).call(this);